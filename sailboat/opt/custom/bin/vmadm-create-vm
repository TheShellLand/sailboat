#!/bin/sh
# SmartOS script creating VMs
#
# Provides an easy to use script for creating LX, Joyent, and KVM zones
# This de-encumbers the use of manual typing and creates json vm spec automatically
# Also, I stopped wanting to refer to an endless number of json files for figuring out what options to use for which
#  type of VM I was creating
#
#
# alpha0.1
# 0xB4AE7C4C
#


function _EasyTiger(){

  export DIFFICULTY=$1

  choose_vm_type

}

function choose_vm_type(){

  # LX, OS, or KVM
  echo "Select a VM type"
  select type in "SmartOS - Native, allows RAM over provisioning" "LX - Native, runs linux flavors, yum" "KVM - Windows, Mac OS X, any ISO"; do
    case option in
      "SmartOS - Native, allows RAM over provisioning") create_vm_spec_smartos ;;
      "LX - Native, runs linux flavors, yum") create_vm_spec_lx ;;
      "KVM - Windows, Mac OS X, any ISO") create_vm_spec_kvm ;;
    esac
  done

}

function create_vm_spec_smartos(){

  # Create Joyent SmartOS zone VM
  vmadm create <<EOF
{
  "autoboot": true,
  "brand": "joyent",
  "image_uuid": "d34c301e-10c3-11e4-9b79-5f67ca448df0",
  "max_physical_memory": 3072,
  "cpu_cap": 100,
  "alias": "fifo",
  "quota": "40",
  "resolvers": [
    "8.8.8.8",
    "8.8.4.4"
  ],
  "nics": [
    {
      "interface": "eth0",
      "nic_tag": "admin",
      "ip": "10.1.1.240",
      "gateway": "10.1.1.1",
      "netmask": "255.255.255.0",
      "primary": "true"
    }
  ]
}
EOF

}

function create_vm_spec_lx(){

  # Create LX VM
  vmadm create << EOF
{
  "brand": "lx",
  "kernel_version": "3.13.0",
  "max_physical_memory": 2048,
  "image_uuid": "",
  "resolvers": ["8.8.8.8","8.8.4.4"],
  "nics": [
    {
      "interface": "eth0",
      "nic_tag": "admin",
      "ip": "dhcp",
      "netmask": "dhcp",
      "gateway": "dhcp",
    }
  ]
}
EOF


}

function create_vm_spec_kvm(){

  # Create KVM VM

}

function create_vm_spec_kvm_image_import(){

# Required:
# $importedUUID

# Create KVM VM from Imported Image
vmadm create << EOF
{
  "brand": "kvm",
  "resolvers": ["$DNS_PRIMARY","$DNS_SECONDARY"],
  "ram": "$RAM",
  "max_locked_memory": "$RAM_MAX",
  "vcpus": "$VCPU",
  "nics": [
    {
      "nic_tag": "admin",
      "model": "virtio",
      "ip": "dhcp",
      "primary": true
    }
  ],
  "disks": [
    {
      "image_uuid": "$importedUUID",
      "boot": true,
      "model": "virtio"
    }
  ]
}
EOF


}


function create


# MAIN

echo "How would you like to create your VM today?"
select TYPE in "Just the simple essentials!" "I want to see all the options!"; do
    case $TYPE in
        "Just the simple essentials!") _EasyTiger EASY
        # Choose VM type
        # Choose DHCP or Static, nic tag
        #
        ;;
        "I want to see all the options!") _EasyTiger HARD
        # Choose VM type
        # Choose DHCP or Static, phys, nic tag, interface, etherstub, vnic
        #  - all ipadm ifprop, addrprop, and prop
        #
        ;;
    esac
done
