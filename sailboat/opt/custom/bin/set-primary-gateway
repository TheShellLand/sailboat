#!/bin/bash
# SmartOS script for updating zone nic gateway
#
# Program for setting primary gateway
#
#
# alpha0.1
# 0xB4AE7C4C
#

function _setUUID(){

    # SET UUID
    echo "[*] List of VMs"

    if [ -f /opt/custom/bin/list-ip ]; then
        /opt/custom/bin/list-ip
    else
        vmadm list -o uuid,nics.0.ip,nics.0.nic_tag,nics.1.ip,nics.1.nic_tag,state,type,alias,hostname -s nics.0.ip
    fi

    read -p "Enter UUID> " UUID
    export UUID

}

function _setMAC(){

    # SET MAC
    echo "[*] Current nics"
    vmadm get $UUID 2>/dev/null | json nics
    vmadm info $UUID 2>/dev/null | json nics
    MAC=
    MAC1=
    MAC=$(vmadm get $UUID 2>/dev/null | json nics | json -a mac)
    MAC1=$(vmadm info $UUID 2>/dev/null | json nics | json -a mac)
    echo ""
    if [ ! -z "$MAC" ]; then MAC=$MAC; fi
    if [ ! -z "$MAC1" ]; then MAC=$MAC1; fi
    read -p "Enter mac> ($MAC) " NEWMAC
    if [ ! -z "$NEWMAC" ]; then export MAC=$NEWMAC; fi

}

function _UPDATEconfig(){

    vmadm update $UUID << EOF
{
  "update_nics": [
    {
      "mac": "$MAC",    
      "primary": true
    }
  ]
}
EOF

}


function smartos_update_nic(){

    export TYPE=$1

    # UUID
    _setUUID

    # INTERFACE
    #_setINTERFACE
    #"interface": "$INTERFACE",

    # MAC
    _setMAC

    _UPDATEconfig

    # UPDATE VM
    echo "[*] New nic"
    vmadm get $UUID 2>/dev/null | json nics
    vmadm info $UUID 2>/dev/null | json nics

exit 0

}



# MAIN

smartos_update_nic

